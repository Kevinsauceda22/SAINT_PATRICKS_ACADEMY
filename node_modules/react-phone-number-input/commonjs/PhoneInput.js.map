{"version":3,"file":"PhoneInput.js","names":["_react","_interopRequireDefault","require","_propTypes","_usePhoneDigits2","_PropTypes","_excluded","obj","__esModule","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","keys","PhoneInput","_ref","ref","Component","country","defaultCountry","_ref$useNationalForma","useNationalFormatForDefaultCountryValue","value","onChange","metadata","international","withCountryCallingCode","rest","_usePhoneDigits","usePhoneDigits","phoneDigits","setPhoneDigits","inputFormat","createElement","React","forwardRef","propTypes","PropTypes","string","func","isRequired","bool","elementType","metadataType","_default","exports"],"sources":["../source/PhoneInput.js"],"sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport usePhoneDigits from './usePhoneDigits.js'\r\n\r\nimport { metadata as metadataType } from './PropTypes.js'\r\n\r\nfunction PhoneInput({\r\n\tComponent,\r\n\tcountry,\r\n\tdefaultCountry,\r\n\tuseNationalFormatForDefaultCountryValue = true,\r\n\tvalue,\r\n\tonChange,\r\n\tmetadata,\r\n\tinternational,\r\n\twithCountryCallingCode,\r\n\t...rest\r\n}, ref) {\r\n\t// \"Phone digits\" includes not only \"digits\" but also a `+` sign.\r\n\tconst {\r\n\t\tphoneDigits,\r\n\t\tsetPhoneDigits,\r\n\t\tinputFormat\r\n\t} = usePhoneDigits({\r\n\t\tvalue,\r\n\t\tonChange,\r\n\t\tcountry,\r\n\t\tdefaultCountry,\r\n\t\tinternational,\r\n\t\twithCountryCallingCode,\r\n\t\tuseNationalFormatForDefaultCountryValue,\r\n\t\tmetadata\r\n\t})\r\n\r\n\t// * Passing `international` property is deprecated.\r\n\t// * Passing `withCountryCallingCode` property is deprecated.\r\n\t// * Passing `country` property: it should've been called `defaultCountry` instead\r\n\t//   because it only applies when the user inputs a phone number in a national format\r\n\t//   and is completely ignored when the user inputs a phone number in an international format.\r\n\r\n\treturn (\r\n\t\t<Component\r\n\t\t\t{...rest}\r\n\t\t\tref={ref}\r\n\t\t\tmetadata={metadata}\r\n\t\t\tinputFormat={inputFormat}\r\n\t\t\tinternational={international}\r\n\t\t\twithCountryCallingCode={withCountryCallingCode}\r\n\t\t\tcountry={country || defaultCountry}\r\n\t\t\tvalue={phoneDigits}\r\n\t\t\tonChange={setPhoneDigits}\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nPhoneInput = React.forwardRef(PhoneInput)\r\n\r\nPhoneInput.propTypes = {\r\n\t/**\r\n\t * The phone number (in E.164 format).\r\n\t * Examples: `\"+12\"`, `\"+12133734253\"`.\r\n\t * An \"empty\" `value` could be represented by any \"falsy\" value like `undefined`, `null` or an empty string `\"\"`.\r\n\t */\r\n\tvalue: PropTypes.string,\r\n\r\n\t/**\r\n\t * A function of `value: string?`.\r\n\t * Updates the `value` property (to `undefined` in case it's empty).\r\n\t */\r\n\tonChange: PropTypes.func.isRequired,\r\n\r\n\t/**\r\n\t * A two-letter country code for formatting `value`\r\n\t * as a national phone number (example: `(213) 373-4253`),\r\n\t * or as an international phone number without \"country calling code\"\r\n\t * if `international` property is passed (example: `213 373 4253`).\r\n\t * Example: \"US\".\r\n\t * If no `country` is passed then `value`\r\n\t * is formatted as an international phone number.\r\n\t * (example: `+1 213 373 4253`)\r\n\t */\r\n\tcountry: PropTypes.string,\r\n\r\n\t/**\r\n\t * A two-letter country code for formatting `value`\r\n\t * when a user inputs a national phone number (example: `(213) 373-4253`).\r\n\t * The user can still input a phone number in international format.\r\n\t * Example: \"US\".\r\n\t * `country` and `defaultCountry` properties are mutually exclusive.\r\n\t */\r\n\tdefaultCountry: PropTypes.string,\r\n\r\n\t/**\r\n\t * If `country` property is passed along with `international={true}` property\r\n\t * then the phone number will be input in \"international\" format for that `country`\r\n\t * (without \"country calling code\").\r\n\t * For example, if `country=\"US\"` property is passed to \"without country select\" input\r\n\t * then the phone number will be input in the \"national\" format for `US` (`(213) 373-4253`).\r\n\t * But if both `country=\"US\"` and `international={true}` properties are passed then\r\n\t * the phone number will be input in the \"international\" format for `US` (`213 373 4253`)\r\n\t * (without \"country calling code\" `+1`).\r\n\t */\r\n\tinternational: PropTypes.bool,\r\n\r\n\t/**\r\n\t * If `country` and `international` properties are set,\r\n\t * then by default it won't include \"country calling code\" in the input field.\r\n\t * To change that, pass `withCountryCallingCode` property,\r\n\t * and it will include \"country calling code\" in the input field.\r\n\t */\r\n\twithCountryCallingCode: PropTypes.bool,\r\n\r\n\t/**\r\n\t * A component that renders the `<input/>` itself and also\r\n\t * parses and formats its `value` as the user inputs it.\r\n\t * See `InputBasic.js` and `InputSmart.js` for an example.\r\n\t */\r\n\tComponent: PropTypes.elementType.isRequired,\r\n\r\n\t/**\r\n\t * When `defaultCountry` is defined and the initial `value` corresponds to `defaultCountry`,\r\n\t * then the `value` will be formatted as a national phone number by default.\r\n\t * To format the initial `value` of `defaultCountry` as an international number instead\r\n\t * set `useNationalFormatForDefaultCountryValue` property to `true`.\r\n\t */\r\n\tuseNationalFormatForDefaultCountryValue: PropTypes.bool,\r\n\r\n\t/**\r\n\t * `libphonenumber-js` metadata.\r\n\t */\r\n\tmetadata: metadataType\r\n}\r\n\r\nexport default PhoneInput"],"mappings":"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","ignoreList":[]}